<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rfidGif.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RERERERERERERERERERERERERERERERERERERERERERERERERERETgqnnPK/eT7Te+HCrckAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>